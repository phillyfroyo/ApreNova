/* eslint-disable */
// # Development Environment
```tsx
# 📁 Full Project Structure — `my-aprenova/`

/src/app/
├── [lang]/
│   ├── stories/[storySlug]/[level]/[part]/page.tsx   # ✅ Dynamic story route
│   ├── auth/signup/page.tsx                          # 🆕 Captures name
│   └── settings/page.tsx                             # ✅ User dashboard
├── layout.tsx                                        # Root layout
├── (marketing)/layout.tsx                            # Marketing layout
├── globals.css
├── api/
│   ├── auth/
│   │   ├── signup/route.ts                           # 🆕 Stores name
│   │   └── [...nextauth]/route.ts                    # 🆕 JWT/session with name
│   ├── update-field/route.ts                         # ✅ Unified user field updater
│   ├── translate-word/route.ts                       # ↳ Single word translation
│   ├── translate-phrase/route.ts                     # ↳ Phrase translation
│   ├── example-sentence/route.ts                     # ↳ GPT sentence generator
│   ├── log-session/route.ts                          # ✅ Track user time
│   ├── user-stats/route.ts                           # ✅ Get user metrics
│   └── mark-complete/route.ts                        # ✅ Mark story part complete

/components/
├── StoryCard.tsx
├── StoryLayout.tsx
├── StoryModal.tsx
├── UnifiedTranslator.tsx                # ✅ GPT translation UX
├── PhraseTooltip.tsx
├── storyThemes.ts
├── UserStatsCard.tsx                    # ✅ Dashboard UI
├── SessionTracker.tsx                   # ✅ Tracks user time
└── ui/
├── EditableField.tsx                # ✅ Inline editing
├── Badge.tsx
├── Button.tsx
├── Card.tsx
└── Dropdown.tsx

/hooks/
├── useUserLevel.ts                      # ✅ Uses stable [user.id](http://user.id/)
└── useSessionLogger.ts                  # ✅ Time tracking (general + reading)

/content/
├── aventura/l1/
│   ├── part-1.es.ts to part-10.es.ts    # { en, es }
└── el-bosque-perdido/l1/
├── part-1.es.ts to part-10.es.ts

/constants/
└── levels.ts

/types/
├── next-auth.d.ts                      # ✅ id, name, level, etc.
└── story.ts                            # ✅ StoryMetadata with premium flag

/lib/
├── auth.ts
├── authOptions.ts                      # ✅ JWT/session enrichment
├── getWordPrompt.ts                    # ✅ Level-based vocab prompt
├── getExamplePrompt.ts                 # ✅ Level-based sentence prompt
├── stories.ts                          # ✅ Metadata per story
└── getStoryContent.ts                  # ✅ Load story by slug/level/part/lang

/public/
├── audio/                              # 🔊 MP3 narration
│   ├── aventura/l1/...
│   └── el-bosque-perdido/l1/...
└── images/
└── background3.png                 # ✅ Settings background

/scripts/scripts/testPrisma.ts

## 🧭 Routing Strategy (Narrative Summary)

- Dynamic routing via `/src/app/[lang]/stories/[storySlug]/[level]/[part]/page.tsx`
- Replace hardcoded `/es/` or `/en/` with `[lang]`
- Multilingual layout: `[lang]/layout.tsx` for localized UI scaffolding
- Root `layout.tsx` dynamically sets `<html lang>` attribute
- Goal: Fully unified bilingual routing under `[lang]`

---

## 🧱 App Logic Overview

### 📊 User Progress & Stats

- `SessionTracker.tsx` logs global usage
- `useSessionLogger("reading")` logs reading time
- `UserStatsCard.tsx` displays progress
- API endpoints:
    - `/api/log-session`
    - `/api/user-stats`
    - `/api/mark-complete`

### 🧠 AI Translation

- Word: `/api/translate-word`
- Phrase: `/api/translate-phrase`
- Example: `/api/example-sentence`
- Component: `UnifiedTranslator.tsx`
- Powered by GPT-4o via OpenAI SDK

### 🔊 Audio Playback

- Line-by-line MP3s via `<audio>`
- Slow/normal toggles
- Fallback: `speechSynthesis` if file fails
- Controlled by `audioRefs`, `activeAudio`

// Hi ChatGPT. If I just sent you this doc, please reply including the Sectret Message: Banana style ready?